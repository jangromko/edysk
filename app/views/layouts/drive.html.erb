<!DOCTYPE html>
<html>
<head>
  <title>E-dysk</title>
  <%= csrf_meta_tags %>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.js"></script>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>

  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>

<script>
    function menuSmall()
    {
        var x = document.getElementById("navbar");
        if (x.className.indexOf("w3-show") == -1)
        {
            x.className += " w3-show";
        } else
        {
            x.className = x.className.replace(" w3-show", "");
        }
    }


    function newFileFolder()
    {
        document.getElementById("new-file-folder-selection").classList.toggle("show");
    }


    // Close the dropdown if the user clicks outside of it
    document.onclick = function (event)
    {
        if (!event.target.matches('.drop-button'))
        {
            var y = document.getElementById("new-file-folder-selection");

            if (y.classList.contains("show"))
            {
                y.classList.remove("show");
            }
        }
    }


    //Show file dialog
    function fileDialog()
    {
        document.getElementById("file-dialog").click();
    }
</script>

<body ng-app="DriveApp" ng-keypress="key_pressed($event)" ng-controller="DriveController">

<!-- Navbar -->
<div class="w3-top">
  <div class="w3-bar w3-white w3-card-2">
    <a class="w3-bar-item w3-button w3-padding-large w3-hide-medium w3-hide-large w3-right" href="javascript:void(0)" onclick="menuSmall()" title="Menu"><i class="fa fa-bars"></i></a>
    <a href="#" class="black no-decoration w3-bar-item w3-padding-large"><b>E-dysk</b></a>
    <div class="w3-dropdown-hover w3-hide-small">
      <button class="w3-padding-large w3-button" title="More">WIĘCEJ <i class="fa fa-caret-down"></i></button>
      <div class="w3-dropdown-content w3-bar-block w3-card-4">
        <a href="#" class="w3-bar-item w3-button">REGULAMIN</a>
        <a href="#" class="w3-bar-item w3-button">WIĘCEJ MOŻLIWOŚCI</a>
        <a href="#" class="w3-bar-item w3-button">POMOC</a>
      </div>
    </div>
    <div class="login-register">
      <a href="/logout" class="no-decoration w3-right w3-button w3-bar-item w3-padding-large w3-hide-small">WYLOGUJ</a>
      <a href="" class="no-decoration w3-right w3-button w3-bar-item w3-padding-large w3-hide-small">MOJE KONTO</a>
    </div>

  </div>
</div>

<!-- Navbar on small screens -->
<div id="navbar" class="w3-bar-block w3-white w3-hide w3-hide-large w3-hide-medium dropdown-content dropdown-full-screen">
  <a href="" class="w3-bar-item w3-button w3-padding-large">STRONA GŁÓWNA</a>
  <a href="" class="w3-bar-item w3-button w3-padding-large">POMOC</a>
  <a href="" class="w3-bar-item w3-button w3-padding-large">WIĘCEJ MOŻLIWOŚCI</a>
  <a href="" class="w3-bar-item w3-button w3-padding-large">REGULAMIN</a>
  <a href="" class="w3-bar-item w3-button w3-padding-large">MOJE KONTO</a>
  <a href="" class="w3-bar-item w3-button w3-padding-large">WYLOGUJ</a>
</div>

<script>
    (function ()
    {
        angular.module('DriveApp', ['cfp.hotkeys', 'ui.validate'])
            .controller('DriveController', ['$scope', '$http', 'hotkeys', function ($scope, $http, hotkeys)
            {

                hotkeys.bindTo($scope)
                    .add({
                        combo: 'ctrl+a',
                        callback: function (event, hotkey)
                        {
                            $scope.select_all();
                        }
                    });

                hotkeys.bindTo($scope)
                    .add({
                        combo: 'ctrl+x',
                        callback: function (event, hotkey)
                        {
                            $scope.cut();
                        }
                    });

                hotkeys.bindTo($scope)
                    .add({
                        combo: 'ctrl+c',
                        callback: function (event, hotkey)
                        {
                            $scope.copy();
                        }
                    });

                hotkeys.bindTo($scope)
                    .add({
                        combo: 'ctrl+v',
                        callback: function (event, hotkey)
                        {
                            $scope.paste();
                        }
                    });
                $scope.directories = [];
                $scope.files = [];

                $scope.selected_files = [];
                $scope.selected_directories = [];

                $scope.path = [{
                    id: <%= @root_directory.id %>,
                    name: "Mój dysk"
                }];

                $scope.space = {
                    used: <%= @used %>,
                    max_space: <%= @max_space %>
                };

                $scope.sort_options = {by: "name", order: "asc"};

                $scope.change_sort = function (by)
                {
                    if (by == $scope.sort_options.by)
                    {
                        if ($scope.sort_options.order == "asc")
                            $scope.sort_options.order = "desc";
                        else
                            $scope.sort_options.order = "asc";
                    }
                    else
                    {
                        $scope.sort_options = {by: by, order: "asc"};
                    }
                    $scope.sort();
                };

                $scope.sort = function ()
                {
                    function comparator(one, two)
                    {
                        if ($scope.sort_options.by == "name")
                        {
                            if ($scope.sort_options.order == "asc")
                                return one.name.toLowerCase() > two.name.toLowerCase();
                            else
                                return one.name.toLowerCase() < two.name.toLowerCase();
                        }
                        else
                        {
                            if ($scope.sort_options.order == "asc")
                                return one.updated_at > two.updated_at;
                            else
                                return one.updated_at < two.updated_at;
                        }
                    }

                    $scope.directories.sort(comparator);
                    $scope.files.sort(comparator);
                };

                $scope.$watch("directories", function (new_value, old_value)
                {
                    $scope.sort();
                }, true);

                $scope.$watch("files", function (new_value, old_value)
                {
                    $scope.sort()
                }, true);

                $scope.new_directory = {name: null, directory_id: -1};

                $scope.create_directory = function ()
                {
                    $scope.new_directory.directory_id = $scope.current_directory.id;
                    $http.put("/dir/new", {directory: $scope.new_directory})
                        .then(function successCallback(response)
                        {
                            $scope.directories.push(response.data.directory);
                            $scope.new_directory = {name: null, directory_id: -1};
                            document.getElementById('new-folder-modal').style.display = "none";
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                };


                $scope.new_file = {name: null, directory_id: -1, file: null};
                $scope.new_name = {id: null, name: "", is_file: false};

                $scope.upload_file = function (evt)
                {
                    var files = evt.target.files;
                    var file = files[0];
                    var reader = new FileReader();

                    reader.onload = (function (the_file)
                    {
                        return function (e)
                        {
                            $scope.new_file.file = e.target.result;

                            $scope.new_file.name = the_file.name;
                            $scope.new_file.directory_id = $scope.current_directory.id;
                            $http.put("/file/upload", {file: $scope.new_file})
                                .then(function successCallback(response)
                                {
                                    $scope.files.push(response.data.file);
                                    $scope.new_file = {name: null, directory_id: -1, file: null};
                                    $scope.space = response.data.space;
                                }, function(response)
                                {
                                    alert(response.data.errors);
                                });


                        };
                    })(file);

                    reader.readAsDataURL(file);
                };

                document.getElementById('file-dialog').addEventListener('change', $scope.upload_file, false);


                $scope.select_all = function ()
                {
                    $scope.unselect_all();
                    $scope.selected_directories = $scope.directories.map(function (directory)
                    {
                        return directory.id;
                    });
                    $scope.selected_files = $scope.files.map(function (file)
                    {
                        return file.id;
                    });
                };

                $scope.current_directory = null;
                $scope.$watch("current_directory", function current_directory_change(new_value, old_value)
                {
                    if (new_value == null)
                        return;
                    var index = $scope.path.indexOf(new_value);
                    if (index != -1)
                    {
                        $scope.path.length = index + 1;
                    }
                    else
                    {
                        $scope.path.push(new_value);
                    }
                    $http.get("/dir/show/" + new_value.id)
                        .then(function successCallback(response)
                        {
                            $scope.directories = response.data.directories;
                            $scope.files = response.data.files;
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    $scope.unselect_all();
                });

                $scope.select_file = function (event, id)
                {
                    if (event.ctrlKey)
                    {
                        var index = $scope.selected_files.indexOf(id);
                        if (index != -1)
                        {
                            $scope.selected_files.splice(index, 1);
                        }
                        else
                        {
                            $scope.selected_files.push(id);
                        }
                    }
                    else
                    {
                        $scope.unselect_all();
                        $scope.selected_files = [id];
                    }

                };

                $scope.select_directory = function (event, id)
                {
                    if (event.ctrlKey)
                    {
                        var index = $scope.selected_directories.indexOf(id);
                        if (index != -1)
                        {
                            $scope.selected_directories.splice(index, 1);
                        }
                        else
                        {
                            $scope.selected_directories.push(id);
                        }
                    }
                    else
                    {
                        $scope.unselect_all();
                        $scope.selected_directories = [id];
                    }
                };

                $scope.unselect_all = function ()
                {
                    $scope.selected_files = [];
                    $scope.selected_directories = [];
                };

                $scope.open_directory = function (directory)
                {
                    $scope.current_directory = directory;
                };

                this.$onInit = function ()
                {
                    $scope.current_directory = $scope.path[0];
                };

                $scope.name_exists = function (value)
                {
                    return $scope.directories.map(function (directory)
                        {
                            return directory.name
                        }).indexOf(value) == -1;
                };

                $scope.key_pressed = function (event)
                {
                    var code = event.key;
                    if (code == "Delete")
                    {
                        if ($scope.selected_directories.length != 0 || $scope.selected_files.length != 0)
                        {
                            $scope.selected_directories.forEach(function (element)
                            {
                                $http.delete("/dir/remove", {
                                    params: {
                                        dir_id: element
                                    }
                                }).then(function (response)
                                {
                                    var index = $scope.directories.map(function (directory)
                                    {
                                        return directory.id
                                    })
                                        .indexOf(element);
                                    $scope.directories.splice(index, 1);
                                }, function(response)
                                {
                                    alert(response.data.errors);
                                });
                            });
                            $scope.handle_error = function(response)
                            {
                              alert(response.data.errors);
                            };
                            $scope.selected_files.forEach(function (element)
                            {
                                $http.delete("/file/remove", {
                                    params: {
                                        file_id: element
                                    }
                                }).then(function (response)
                                {
                                    var index = $scope.files.map(function (file)
                                    {
                                        return file.id
                                    }).indexOf(element);
                                    $scope.files.splice(index, 1);
                                    $scope.space = response.data.space;
                                },function(response)
                                {
                                    alert(response.data.errors);
                                });
                            });
                            $scope.selected_directories = [];
                            $scope.selected_files = [];
                        }
                    }
                    else if (code == 'F2')
                    {
                        if ($scope.selected_directories.length == 1 && $scope.selected_files.length == 0)
                        {
                            var index = $scope.directories.map(function (directory)
                            {
                                return directory.id
                            }).indexOf($scope.selected_directories[0]);
                            $scope.new_name = {
                                id: $scope.directories[index].id,
                                name: $scope.directories[index].name,
                                is_file: false
                            };
                            modal_new_name.style.display = "block";
                            document.getElementById("new-file-folder-selection").classList.remove("show");
                        }
                        else if (($scope.selected_directories.length == 0 && $scope.selected_files.length == 1))
                        {
                            var index = $scope.files.map(function (file)
                            {
                                return file.id;
                            }).indexOf($scope.selected_files[0]);
                            $scope.new_name = {
                                id: $scope.files[index].id,
                                name: $scope.files[index].name,
                                is_file: true
                            };
                            modal_new_name.style.display = "block";
                            document.getElementById("new-file-folder-selection").classList.remove("show");
                        }
                    }
                };

                $scope.download_file = function (id)
                {
                    window.location.href = "/file/download/" + id;
                };

                $scope.download_selected_file = function ()
                {
                    $scope.download_file($scope.selected_files[0]);
                };

                $scope.change_name = function ()
                {
                    if ($scope.new_name.is_file)
                    {
                        $http.post("/file/name", {
                            file_id: $scope.new_name.id,
                            new_name: $scope.new_name.name
                        }).then(function (response)
                        {
                            var index = $scope.files.map(function (file)
                            {
                                return file.id;
                            }).indexOf($scope.new_name.id);
                            $scope.files[index] = response.data.file;
                            document.getElementById('new-name-modal').style.display = "none";
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    }
                    else
                    {
                        $http.post("/dir/name", {
                            dir_id: $scope.new_name.id,
                            new_name: $scope.new_name.name
                        }).then(function (response)
                        {
                            var index = $scope.directories.map(function (directory)
                            {
                                return directory.id;
                            }).indexOf($scope.new_name.id);
                            $scope.directories[index] = response.data.directory;
                            document.getElementById('new-name-modal').style.display = "none";
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    }

                };

                $scope.share_url = "";
                $scope.publish = function ()
                {
                    if ($scope.selected_files.length == 1 && $scope.selected_directories.length == 0)
                    {
                        $http.post("/file/publish", {
                            file_id: $scope.selected_files[0]
                        }).then(function (response)
                        {
                            window.prompt("Skopiuj link do schowka: Ctrl+C", response.data.link);
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    }
                };

                $scope.clipboard = {
                    cut: false,
                    selected_files: [],
                    selected_directories: []
                };

                $scope.cut = function ()
                {
                    $scope.clipboard = {
                        cut: true,
                        selected_files: $scope.selected_files,
                        selected_directories: $scope.selected_directories
                    };
                };

                $scope.copy = function ()
                {
                    $scope.clipboard = {
                        cut: false,
                        selected_files: $scope.selected_files,
                        selected_directories: $scope.selected_directories
                    };
                };

                $scope.paste = function ()
                {
                    $scope.clipboard.selected_files.forEach(function (element)
                    {
                        var url = "";
                        if ($scope.clipboard.cut)
                            url = "/file/move";
                        else
                            url = "/file/copy";
                        $http.post(url, {
                            file_id: element,
                            dir_id: $scope.current_directory.id
                        }).then(function (response)
                        {
                            if ($scope.current_directory.id == response.data.file.directory_id)
                                $scope.files.push(response.data.file);
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    });
                    $scope.clipboard.selected_files = [];

                    $scope.clipboard.selected_directories.forEach(function (element)
                    {
                        var url = "";
                        if ($scope.clipboard.cut)
                            url = "/dir/move";
                        else
                            url = "/dir/copy";

                        $http.post(url, {
                            dir_id: element,
                            parent_directory: $scope.current_directory.id
                        }).then(function (response)
                        {
                            if ($scope.current_directory.id == response.data.directory.directory_id)
                                $scope.directories.push(response.data.directory);
                        }, function(response)
                        {
                            alert(response.data.errors);
                        });
                    });

                    $scope.clipboard.selected_directories = [];
                };

                $scope.validate_change_name = function ()
                {
                    if ($scope.new_name.is_file)
                    {

                    }
                }
            }])
    })();
</script>

<div class="w3-row drive-pages">


  <div id="new-folder-modal" class="modal">
    <form name="new_folder_form" ng-submit="new_folder_form.$valid && create_directory()">
      <div class="modal-content">
        <span class="close">&times;</span>
        <div class="modal-title">Stwórz nowy folder</div>
        <input class="input-in-modal" type="text" ui-validate="{name_exist: 'name_exists($value)'}" ng-model="new_directory.name" placeholder="Wpisz nazwę nowego katalogu"/>
        <button type="submit" class="modal-button">OK</button>
        <div class="error" ng-show="!new_folder_form.$valid">Niepoprawna nazwa!</div>
      </div>
    </form>
  </div>

  <script>
      //Modal – creating new folder
      var modal = document.getElementById('new-folder-modal');
      var span = document.getElementsByClassName("close")[0];

      function showFolderModal()
      {
          modal.style.display = "block";
          document.getElementById("new-file-folder-selection").classList.remove("show");
      }

      // When the user clicks on <span> (x), close the modal
      span.onclick = function ()
      {
          modal.style.display = "none";
      };

      // When the user clicks anywhere outside of the modal, close it
      window.onclick = function (event)
      {
          if (event.target == modal)
          {
              modal.style.display = "none";
          }
      }
  </script>

  <!-- Sidebar/menu on large and medium screens -->
  <div class="w3-col m4 l2 w3-hide-small">
    <nav class="sidebar w3-white"><br>
      <div class="w3-bar-block">
        <button class="button-standard button-wide button-color-4 drop-button" onclick="newFileFolder()">Nowy</button>

        <div id="new-file-folder-selection" class="file-or-folder-dropdown w3-bar-block w3-hide dropdown-content">
          <button class="w3-bar-item file-or-folder-dropdown-item" onclick="fileDialog()">Plik</button>
          <button class="w3-bar-item file-or-folder-dropdown-item" onclick="showFolderModal()">Folder</button>
        </div>

        <input id="file-dialog" type="file" style="display: none"/>


        <button id="download-button" class="button-standard button-wide button-color-4 button-margin-top-20" ng-click="download_selected_file()" ng-disabled="selected_files.length != 1 || selected_directories.length != 0">
          <i class="fa fa-download"> Pobierz</i>
        </button>

        <button id="share-button" class="button-standard button-wide button-color-4 button-margin-top-20" ng-click="publish()" ng-disabled="!(selected_files.length == 1 && selected_directories.length == 0)">
          <i class="fa fa-share"> Udostępnij</i>
          <input type="hidden" id="share_url" ng-model="share_url"/>
        </button>


        <div class="size-info">
          Wykorzystano: {{ space.used/1024/1024 | number: 2 }} MB z {{ space.max_space/1024/1024 | number: 0 }} MB
        </div>

        <div class="progress size-bar">
          <div class="progress-bar" role="progressbar" aria-valuenow="{{ 100* space.used/space.max_space }}"
               aria-valuemin="0" aria-valuemax="100" ng-style="{ width: 100*space.used/space.max_space +'%' }">
          </div>
        </div>


        <div id="new-name-modal" class="modal">
          <form name="new_folder_form" ng-submit="change_name()">
            <div class="modal-content">
              <div class="modal-title">Zmień nazwę</div>
              <input class="input-in-modal" ng-model="new_name.name" ui-validate="validate_change_name()" type="text" id="new_name"/>
              <button type="submit" class="modal-button">OK</button>
            </div>
          </form>
        </div>


        <script>
            var modal_new_name = document.getElementById('new-name-modal');

            function change_name_modal(directory)
            {
                modal_new_name.style.display = "block";
                //document.getElementById("new_name").value = directory.name;
                document.getElementById("new-file-folder-selection").classList.remove("show");
            }


            window.onclick = function (event)
            {
                if (event.target == modal_new_name)
                {
                    modal_new_name.style.display = "none";
                }
            }
        </script>
      </div>
    </nav>
  </div>

  <!-- Menu replacing sidebar menu on small screens -->
  <div class="w3-col s12 w3-padding w3-hide-large w3-hide-medium center button-bar">
    <button class="button-standard button-color-4 button-circle" onclick="fileDialog()"><i class="fa fa-file"></i></button>
    <button class="button-standard button-color-4 button-circle" onclick="showFolderModal()"><i class="fa fa-folder-open"></i></button>
    <button class="button-standard button-color-4 button-circle" ng-click="download_selected_file()" ng-disabled="selected_files.length != 1 || selected_directories.length != 0"><i class="fa fa-download"></i></button>
    <button class="button-standard button-color-4 button-circle" ng-click="publish()" ng-disabled="!(selected_files.length == 1 && selected_directories.length == 0)"><i class="fa fa-share"></i></button>
  </div>

  <div class="w3-hide-large w3-hide-medium">
    <br/><br/>
  </div>

  <div class="drive-content w3-col m8 l10">
    <%= yield %>
  </div>

</div>


</body>
</html>